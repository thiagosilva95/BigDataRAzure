r + r
2 + 2
3 + 3
# Iris
dt5 <- data.table(iris)
setwd("D:/codes/R/dsa/BigDataRAzure/Cap07")
# Instalando os pacotes
install.packages("data.table")
library(data.table)
# Iris
dt5 <- data.table(iris)
View(dt5)
dt5[, .(Sepal.Length = median(Sepal.Length),
Sepal.Width = median(Sepal.Width),
Petal.Length = median(Petal.Length),
Petal.Width = median(Petal.Width)),
by = Species]
setwd("D:/codes/R/dsa/BigDataRAzure/Cap07")
getwd()
install.packages("rvest")
library(rvest)
library(readr)
library(stringr)
library(dplyr)
library(lubridate)
install.packages("lubridate")
# Leitura da web page - Retorna um documento xml
webpage <- read_html("https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html")
webpage
class(webpage)
# Extraindo os registros
# Cada elemento na web page acima tem o seguinte formato em html:
# <span class="short-desc"><strong> DATE </strong> LIE <span class="short-truth"><a href="URL"> EXPLANATION </a></span></span>
?html_nodes
results <- webpage %>% html_nodes(".short-desc")
results
class(results)
# Construindo o dataset
records <- vector("list", length = length(result))
# Construindo o dataset
records <- vector("list", length = length(result))
# Construindo o dataset
records <- vector("list", length = length(results))
records
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <- str_sub(xml_contents(results[i])[2] %>% html_text(trim = TRUE), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <- results[i] %>% html_nodes("a") %>% html_attr("href")
records[[i]] <- data.frame(date = date, lie = lie, explanation = explanation, url = url)
}
# Dataset final
df <- bind_rows(records)
df
View(df)
# Transformando o campo data para o formato Date em R
df$date <- mdy(df$date)
library(lubridate)
# Transformando o campo data para o formato Date em R
df$date <- mdy(df$date)
# Exportando para csv
write_csv(df, "mentiras_trump.csv")
# Exportando para csv
write_csv(df, "mentiras_trump.csv")
# Lendo os dados
df <-  read_csv("mentiras_trump.csv")
View(df)
setwd("D:/codes/R/dsa/BigDataRAzure/Cap07")
getwd()
install.packages("haven")
library(haven)
# SAS
vendas <- read_sas("vendas.sas")
vendas
class(vendas)
View(vendas)
# STADTA
df <- read_dta("mov.dta")
# STADTA
df_stata <- read_dta("mov.dta")
df_stata
class(df_stata)
View(df_stata)
# Pacote Foreign
install.packages("foreign")
library(foreign)
# Stata
florida <- read.dta("florida.dta")
florida
class(florida)
dados <- read.spss("international.sav")
dados
head(dados)
class(dados)
df <- data.frame(dados)
df
head(df)
View(df)
# Criando um bloxpot
boxplot(df$gdp)
# Criando um bloxpot
boxplot(df$gdp)
# Coeficiente de Correlação. Indica uma associação negativa entre GDP e alfabetização feminina
cor(df$gdp, df$f_illit)
setwd("D:/codes/R/dsa/BigDataRAzure/Cap07")
getwd()
# Instalar e carregar os pacotes
install.packages("quantmod")
# Instalar e carregar os pacotes
install.packages("quantmod") # Modelagem financeira quantitativa
install.packages("xts")
install.packages("moments")
library(quantmod)
library(xts)
library(moments)
# Seleção do período de análise
startDate = as.Date("2018-01-21")
endDate = as.Date("2018-06-21")
# Download dos dados do período
# Obs: O Yahoo Finance está passando por mudanças
# e o serviço de cotações online pode estar instável
?getSymbols
getSymbols("PETR4.SA", src = "yahoo", from = startDate, to = endDate, auto.assign = T)
# Checando o tipo de dado retornado
class(PETR4.SA)
is.xts(PETR4.SA)
# Mostra os primeiros registros para ações da Petrobras
head(PETR4.SA)
# Analisando os dados de fechamento
PETR4.SA.Close <- PETR4.SA[,"PETR4.SA.Close"]
PETR4.SA.Close
?Cl
head(Cl(PETR4.SA), 5)
# Agora, vamos plotar o gráfico da Petrobras
# Gráfico de candlestick da Petrobras
?candleChart
candleChart(PETR4.SA)
candleChart(PETR4.SA)
# Plot do fechamento
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobras",
col = "red", xlab = "Data", ylab = "Preço", major.ticks = "months",
minor.ticks = FALSE)
# Plot do fechamento
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobras",
col = "red", xlab = "Data", ylab = "Preço", major.ticks = "months",
minor.ticks = FALSE)
# Plot do fechamento
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobras",
col = "red", xlab = "Data", ylab = "Preço", major.ticks = 'months',
minor.ticks = FALSE)
PETR4.SA.Close <- PETR4.SA[, "PETR4.SA.Close"]
is.xts(PETR4.SA.Close)
?Cl
head(Cl(PETR4.SA),5)
# Plot do fechamento
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobras",
col = "red", xlab = "Data", ylab = "Preço", major.ticks = 'months',
minor.ticks = FALSE)
# Adicionado as bandas de bollinger ao gráfico, com média de 20 períodos e 2 desvios
# Bollinger Band
# Como o desvio padrão é uma medida de volatilidade,
# Bollinger Bands ajustam-se às condições de mercado. Mercados mais voláteis,
# possuem as bandas mais distantes da média, enquanto mercados menos voláteis possuem as
# bancas mais próximas da média
?addBBands
addBBands(n = 20, sd = 2)
addBBands(n = 20, sd = 2)
getSymbols("PETR4.SA", src = "yahoo", from = startDate, to = endDate, auto.assign = T)
# Agora, vamos plotar o gráfico da Petrobras
# Gráfico de candlestick da Petrobras (gráfico de velas)
?candleChart
candleChart(PETR4.SA)
# Agora, vamos plotar o gráfico da Petrobras
# Gráfico de candlestick da Petrobras (gráfico de velas)
?candleChart
candleChart(PETR4.SA)
# Plot do fechamento
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobras",
col = "red", xlab = "Data", ylab = "Preço", major.ticks = "months",
minor.ticks = FALSE)
# Adicionado as bandas de bollinger ao gráfico, com média de 20 períodos e 2 desvios
# Bollinger Band
# Como o desvio padrão é uma medida de volatilidade,
# Bollinger Bands ajustam-se às condições de mercado. Mercados mais voláteis,
# possuem as bandas mais distantes da média, enquanto mercados menos voláteis possuem as
# bancas mais próximas da média
?addBBands
addBBands(n = 20, sd = 2)
# Adicionando o indicador ADX, média 11 do tipo exponencial
?addADX
addADX(n = 11, maType = "EMA")
# Calculando logs diários
?log
PETR4.SA.ret <- diff(log(PETR4.SA.Close), lag = 1)
# Remove os valores NA na posição 1
PETR4.SA.ret <- PETR4.SA.ret[-1]
# Plotar as taxas de retorno
plot(PETR4.SA.ret, main = "Fechamento Diário Ações Petrobras",
col = "red", xlab = "Data", ylab = "Retorno", major.ticks = "months",
minor.ticks = FALSE)
# Calculando algumas medidas estatísticas
statNames <- c("Mean", "Standard Derivation", "Skewness", "Kurtosis")
PETR4.SA.stats <- c(mean(PETR4.SA.ret), sd(PETR4.SA.ret), skewness(PETR4.SA.ret), kurtosis(PETR4.SA.ret))
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
# Calculando algumas medidas estatísticas
statNames <- c("Mean", "Standard Derivation", "Skewness", "Kurtosis")
PETR4.SA.stats <- c(mean(PETR4.SA.ret), sd(PETR4.SA.ret), skewness(PETR4.SA.ret), kurtosis(PETR4.SA.ret))
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
# Remove os valores NA na posição 1
PETR4.SA.ret <- PETR4.SA.ret[-1]
# Plotar as taxas de retorno
plot(PETR4.SA.ret, main = "Fechamento Diário Ações Petrobras",
col = "red", xlab = "Data", ylab = "Retorno", major.ticks = "months",
minor.ticks = FALSE)
# Calculando algumas medidas estatísticas
statNames <- c("Mean", "Standard Derivation", "Skewness", "Kurtosis")
PETR4.SA.stats <- c(mean(PETR4.SA.ret), sd(PETR4.SA.ret), skewness(PETR4.SA.ret), kurtosis(PETR4.SA.ret))
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
# Calculando algumas medidas estatísticas
statNames <- c("Mean", "Standard Deviation", "Skewness", "Kurtosis")
PETR4.SA.stats <- c(mean(PETR4.SA.ret), sd(PETR4.SA.ret), skewness(PETR4.SA.ret), kurtosis(PETR4.SA.ret))
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
# Salvando os dados em um arquivo .rds (arquivo em formato binário do R)
# getSymbols("PETR4.SA", src = 'yahoo')
saveRDS(PETR4.SA, file = "PETR4.SA.rds") # Salva os dados em formato binário
Ptr = readRDS("PETR4.SA.rds")
dir()
head(Ptr)
# Configurando o diretÃ³rio de trabalho
# Coloque entre aspas o diretÃ³rio de trabalho que vocÃª estÃ¡ usando no seu computador
# NÃ£o use diretÃ³rios com espaÃ§o no nome
setwd("D:/codes/R/dsa/BigDataRAzure/Cap07")
getwd()
